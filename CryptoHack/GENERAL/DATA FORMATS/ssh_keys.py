import base64
import struct

def read_ssh_string(data, offset):
    length = struct.unpack(">I", data[offset:offset+4])[0]
    value = data[offset+4:offset+4+length]
    return value, offset + 4 + length

def read_ssh_mpint(data, offset):
    length = struct.unpack(">I", data[offset:offset+4])[0]
    value = int.from_bytes(data[offset+4:offset+4+length], 'big')
    return value, offset + 4 + length


with open('bruce_rsa.pub', 'r') as f:
    parts = f.read().strip().split()
    key_type = parts[0]
    key_b64 = parts[1]

key_blob = base64.b64decode(key_b64)

offset = 0
type_string, offset = read_ssh_string(key_blob, offset)
e, offset = read_ssh_mpint(key_blob, offset)
n, offset = read_ssh_mpint(key_blob, offset)

print("public exponent:", e)
print("modulus (n):", n)
# 3931406272922523448436194599820093016241472658151801552845094518579507815990600459669259603645261532927611152984942840889898756532060894857045175300145765800633499005451738872081381267004069865557395638550041114206143085403607234109293286336393552756893984605214352988705258638979454736514997314223669075900783806715398880310695945945147755132919037973889075191785977797861557228678159538882153544717797100401096435062359474129755625453831882490603560134477043235433202708948615234536984715872113343812760102812323180391544496030163653046931414723851374554873036582282389904838597668286543337426581680817796038711228401443244655162199302352017964997866677317161014083116730535875521286631858102768961098851209400973899393964931605067856005410998631842673030901078008408649613538143799959803685041566964514489809211962984534322348394428010908984318940411698961150731204316670646676976361958828528229837610795843145048243492909